name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.24.3'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests (skip integration)
      run: go test -short ./...

    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        install-only: true

    - name: Create .goreleaser.yml if not exists
      run: |
        if [ ! -f .goreleaser.yml ]; then
          cat > .goreleaser.yml << 'EOF'
        project_name: the-spice-must-flow
        before:
          hooks:
            - go mod tidy
            - go mod download
        builds:
          - id: the-spice-must-flow
            main: ./cmd/the-spice-must-flow
            binary: the-spice-must-flow
            env:
              - CGO_ENABLED=0
            goos:
              - linux
              - darwin
            goarch:
              - amd64
              - arm64
            ldflags:
              - -s -w -X main.version={{.Version}} -X main.buildTime={{.Date}}
        archives:
          - format: tar.gz
            name_template: >-
              {{ .ProjectName }}_
              {{- .Version }}_
              {{- title .Os }}_
              {{- if eq .Arch "amd64" }}x86_64
              {{- else if eq .Arch "386" }}i386
              {{- else }}{{ .Arch }}{{ end }}
            format_overrides:
              - goos: windows
                format: zip
        checksum:
          name_template: 'checksums.txt'
        snapshot:
          name_template: "{{ incpatch .Version }}-next"
        changelog:
          sort: asc
          filters:
            exclude:
              - '^docs:'
              - '^test:'
              - '^chore:'
        EOF
        fi

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
